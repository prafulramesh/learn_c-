
*******************************************************
Short notes of the Balaguruswamy: Important points only
*******************************************************

* << insertion or put to operator. This operator can be used as left shift operator also. This is the very good exmple of Operator Overloading.
* >> extraction or get from operator.
* Commonly using header files:
	<cassert>
	<cctype>
	<cfloat>
	<climit>
	<cmath>
	<cstdio>
	<cstdlib>
	<cstring>
	....
	....

* main()
	In c++, it returns an integer type value to the Operating system.
	So, every main() should be end with return(0).

* Structure of C++ program
	Include Files
	Class declarations
	Member Function definition
	Main function

* Organize program into 3 seperate files:
	i. Class declarations in 1st file
	ii. Member function definitions are in 2nd file
	iii. Main Program -  Which includes previous files.


* Keywords and their meanings:
	$ asm- To embed the assembly language statements.
	$ auto- Storage class for local variable. Visible only in block or function. By default local varibles are of type auto.
	$ catch- Used to describe exception handler code that catches the exception.
	$ const_cast- It is a casting operator used to explicitly override const or volatile objects.
	$ continue- It causes skipping of statements till the end of a loop in which it appear.
	$ delete- It is an operator used to remove objects from memory that were created using new operators.
	$ dynamic_cast- It is casting operator used to cast the type of an object at runtime.
	$ enum- Used to create a user-defined integer data type.
	$ 

* A void pointer cannot be assigned directly to other type pointer. Need to use cast operator.
	eg:
		void *ptr1;
		char *ptr2;
		ptr2 = ptr1; //This is valid in C but not valid in C++
		ptr2 = (char *)ptr1; //This is valid in C++

* Union members can only be manipulated exclusive of each other

* Storage classes:
	i. Automatic: Keyword auto
	ii. External: Keyword extern
	iii. Static: Keyword static
	iv. Register: Keyword Register: used to store value in CPU registers.

* Arrays: Size should be one larger than number of characters in the string.

* Pointers: 
	
	int *ip;	//int pointer
	ip = &x;	//address of x is assigned to ip
	*ip = 10; 	//10 assigned to x through indirection

	char * const ptr1 = "GOOD"; 	// Constant pointer. We cannot modify the address of ptr1.
	int const * ptr2 = &m; 		// Pointer to a constant. The contents of what it point to cannot be changed.
	const char * const cp = "xyz" 	// Both the pointer and the variables as constant.

* Type Compatibility:
	--int, short int, long int, unsigned char, char, signed char etc are considered as different types.
	--Use of these restrictions are inorder to support function overloading where two functions with same name are
	  distinguished using the type of function arguments.

* Declaration of variables:
	C++ allows declaration anywhere with in the program, but C not
* dynamic initialization of variable is permitted. 

* Reference Variable:
	A reference variable provides an alternative name for the previously defined variable.
	Syntax: data-type & ref_name = variable_name;
	eg1:-
		float total = 100;
		float & sum = total; //Sum and total points to same memory location.

		int a[10];
		int & x = a[10];

		int x;
		int  *p = &x;
		int & m = *p;

		int & n = 50;
	
	eg2:- 
		void f(int & x) 	// uses reference
		{
			x = x+10;	// x is incremented; so also m
		}
		int main()
		{
			int m = 10;
			f(m);		// function call
			.....
			.....
		}
	
		This type of functions are know as "Call by Reference".

* Operators in C++
	All C operators are valid in C++. Additional operators are
	
		::	Scope resolution operator
		::*	Pointer to member declarator
		->*	Pointer to member operator
		.*	Pointer to member operator
		delete	Memory release operator
		endl	Line feed operator
		new	Memory allocation operator
		setw	Field width operator

* Scope resolution operator:
	Application: To identify the class to which a member function belongs.

****	When tried to compile conio.h in g++/Gcc, error is coming. This conio.h can be used in windows based systems only. 
	So installed sudo apt-get install libncurses5-dev libncursesw5-dev and type the following command to compiles
		g++ file_name.cpp -lncurses

* Manipulators:
	endl, setw, fixed and setprecision: See the code p_3_4.cpp



